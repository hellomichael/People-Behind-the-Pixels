@include font-face('Futura', 'futura-condensed-med', normal, normal);

// Hide browser sync message
#__bs_notify__ {
    display: none !important;
}

html, body, canvas {
    position: relative;
    height: 100%;
    width: 100%;
    max-height: 100%;
    max-width: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden;

    // Text
    font-family: 'Futura', Arial, "Helvetica Neue", Helvetica, sans-serif;
    letter-spacing: 1px;
    text-transform: uppercase;
    text-rendering: optimizelegibility;
    color: white;
}

body {
    background: radial-gradient(at center -350px, #444, #000);
}

canvas, #stats {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1
}

#speakers {
    z-index: 2;
}

#noise {
    position: relative;
    width: 100%;
    height: 100%;
    //background: url('../img/noise.gif') center center;
    /* background-size: cover; */
    opacity: 0.05;
    z-index: 9999;
}

#stats {
    left: auto;
    right: 30px;
    z-index: 3;
}

.vertical-dashed-top, .vertical-dashed-bottom {
    height: 0;
    width: 0;

    position: absolute;
    left: 50%;
    margin-left: -1px;
    z-index: 9999;
    border-right: 1px dashed #FF0000;

    transition: all 1500ms cubic-bezier(1.000, 0.000, 0.000, 1.000); /* easeInOutExpo */

    &.slice {
        height: 50%;
    }
}

.vertical-dashed-top {
    bottom: 50%;

    &.hide {
        bottom: 100%;
    }
}

.vertical-dashed-bottom {
    top: 50%;

    &.hide {
        top: 100%;
    }
}

.horizontal-dashed-left, .horizontal-dashed-right {
    height: 0;
    width: 0;

    position: absolute;
    top: 50%;
    margin-top: -1px;
    z-index: 9999;
    border-bottom: 1px dashed #FF0000;

    transition: all 1500ms cubic-bezier(1.000, 0.000, 0.000, 1.000); /* easeInOutExpo */

    &.slice {
        width: 50%;
    }
}

.horizontal-dashed-left {
    right: 50%;

    &.hide {
        right: 100%;
    }
}

.horizontal-dashed-right {
    left: 50%;

    &.hide {
        left: 100%;
    }
}

.vertical-speed-down {
    display: block;
    height: 0;
    width: 1px;
    background-color: red;

    position: absolute;
    top: 25%;
    left: 50%;

    transition: all 1s;

    &.animate {
        top: 100%;
        height: 200px;
    }
}


$duration: 1.5s;
$border: 21px;
$angle: 30deg;

.shape {
    position: absolute;
    top: 50%;
    left: 50%;
    z-index: 9999;

    height: 0;
    width: 0;
    margin-top: -$border - 1;
    margin-left: -$border - 1;
    float: left;
    border: $border solid;

    opacity: 0;
    border-color: transparent #EEE #EEE transparent;
    transform: rotateZ(6*$angle);
    border-radius: 50%;

    &:after {
        content: '';
        display: block;
        border: inherit;
        margin-left: -($border - 1);
        margin-top: -($border - 1);

        border-color: #EEE transparent transparent #EEE;
        transform: rotateY(0);
        border-radius: 50%;
    }

    &.morph {
        $easing: cubic-bezier(0.525, 0.105, 0.320, 1.275);

        animation: morphing $duration $easing 1;
        animation-fill-mode: forwards;

        &:after {
            animation: pseudomorphing $duration $easing 1;
            animation-fill-mode: forwards;
        }
    }

    &.visible {
        transition: all 2s;
        opacity: 1;
    }
}

@keyframes morphing {
    5% {
        border-color: transparent #EEE #EEE transparent;
        transform: rotateZ(3*$angle);
        border-radius: 50%;
    }

    40% {
        border-color: transparent #EEE #EEE transparent;
        transform: skewX($angle) rotateX($angle) rotateZ(0) translateX(-($border/2));
        border-radius: 0;
        top: 25%;
    }

    100% {
        border-color: transparent #EEE #EEE transparent;
        transform: rotateZ(9*$angle);
        border-radius: 0;
        top: 105%;
    }
}

@keyframes pseudomorphing {
    5% {
        border-color: #EEE transparent transparent #EEE;
        transform: rotateY(0);
        border-radius: 50%;
    }

    40% {
        border-color: #EEE transparent transparent #EEE;
        transform: skewX(-$angle) rotateX(-$angle) rotateZ($angle) rotateY(3*$angle) scale(0.8);
        border-radius: 0;
    }

    100% {
        border-color: #EEE transparent transparent #EEE;
        transform: rotateY(0);
        border-radius: 0;
    }
}